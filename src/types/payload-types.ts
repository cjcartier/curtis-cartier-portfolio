/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    testimonials: Testimonial;
    media: Media;
    person: Person;
    company: Company;
    pages: Page;
    hero: Hero;
    switchback: Switchback;
    testimonialComponent: TestimonialComponent;
    tools: Tool;
    toolsComponent: ToolsComponent;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  roles?: ('admin' | 'user')[] | null;
  updatedAt: string;
  createdAt: string;
  enableAPIKey?: boolean | null;
  apiKey?: string | null;
  apiKeyIndex?: string | null;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials".
 */
export interface Testimonial {
  id: number;
  authorName?: string | null;
  author?: (number | null) | Person;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "person".
 */
export interface Person {
  id: number;
  displayName?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  headshot?: (number | null) | Media;
  company?: (number | null) | Company;
  position?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  caption?: string | null;
  featuredColor?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "company".
 */
export interface Company {
  id: number;
  companyName?: string | null;
  logo?: (number | null) | Media;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  layout: (
    | {
        relationTo: 'hero';
        value: number | Hero;
      }
    | {
        relationTo: 'switchback';
        value: number | Switchback;
      }
    | {
        relationTo: 'testimonialComponent';
        value: number | TestimonialComponent;
      }
    | {
        relationTo: 'toolsComponent';
        value: number | ToolsComponent;
      }
  )[];
  slug?: string | null;
  publishedAt?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hero".
 */
export interface Hero {
  id: number;
  title?: string | null;
  heading?: HeadingBlock[] | null;
  section?: {
    paddingTop?: ('none' | 'small' | 'medium' | 'large' | 'xLarge') | null;
    paddingBottom?: ('none' | 'small' | 'medium' | 'large' | 'xLarge') | null;
    backgroundImage?: 'home-curve' | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeadingBlock".
 */
export interface HeadingBlock {
  badges?: Badge[] | null;
  doodle?: ('hard' | 'half-hard' | 'squiggle') | null;
  heading: string;
  subheading?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  buttons?: ButtonBlock[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'heading';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Badge".
 */
export interface Badge {
  label?: string | null;
  variant?: 'primary' | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'badge';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ButtonBlock".
 */
export interface ButtonBlock {
  button: {
    type?: ('custom' | 'reference') | null;
    reference?: {
      relationTo: 'users';
      value: number | User;
    } | null;
    link?: string | null;
    label: string;
    theme?: ('fill' | 'outline' | 'text') | null;
    icon?: ('none' | 'mail') | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'button';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "switchback".
 */
export interface Switchback {
  id: number;
  title?: string | null;
  heading?: HeadingBlock[] | null;
  switchbacks?:
    | {
        title?: string | null;
        reversed?: boolean | null;
        content: HeadingBlock[];
        media: number | Media;
        id?: string | null;
      }[]
    | null;
  section?: {
    paddingTop?: ('none' | 'small' | 'medium' | 'large' | 'xLarge') | null;
    paddingBottom?: ('none' | 'small' | 'medium' | 'large' | 'xLarge') | null;
    backgroundImage?: 'home-curve' | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonialComponent".
 */
export interface TestimonialComponent {
  id: number;
  title?: string | null;
  heading?: HeadingBlock[] | null;
  testimonials?: (number | Testimonial)[] | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "toolsComponent".
 */
export interface ToolsComponent {
  id: number;
  title?: string | null;
  heading?: HeadingBlock[] | null;
  tools?: (number | Tool)[] | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tools".
 */
export interface Tool {
  id: number;
  tool?: string | null;
  company?: (number | null) | Company;
  logoId?:
    | ('contentful' | 'dato' | 'figma' | 'gatsby' | 'github' | 'jira' | 'nextjs' | 'panda' | 'storybook' | 'tailwind')
    | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('custom' | 'reference') | null;
          reference?: {
            relationTo: 'users';
            value: number | User;
          } | null;
          link?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  buttons?: ButtonBlock[] | null;
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  description?: string | null;
  layout?: ButtonBlock[] | null;
  mainLinks?:
    | {
        link: {
          type?: ('custom' | 'reference') | null;
          reference?: {
            relationTo: 'users';
            value: number | User;
          } | null;
          link?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  contactLinks?:
    | {
        link: {
          type?: ('custom' | 'reference') | null;
          reference?: {
            relationTo: 'users';
            value: number | User;
          } | null;
          link?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  footerNote?: string | null;
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  internalName: string;
  codeBlocks?:
    | {
        path?: string | null;
        language: 'typescript' | 'javascript' | 'css';
        code?: string | null;
        rowHighlights?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}